// Code generated by protoc-gen-go.
// source: github.com/jtremback/upc-core/wallet/schema/schema.proto
// DO NOT EDIT!

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	github.com/jtremback/upc-core/wallet/schema/schema.proto

It has these top-level messages:
	Channel
	Account
	EscrowProvider
	Peer
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wire "github.com/jtremback/upc-core/wire"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Channel_State int32

const (
	Channel_PendingOpen   Channel_State = 0
	Channel_Open          Channel_State = 1
	Channel_PendingClosed Channel_State = 2
	Channel_Closed        Channel_State = 3
)

var Channel_State_name = map[int32]string{
	0: "PendingOpen",
	1: "Open",
	2: "PendingClosed",
	3: "Closed",
}
var Channel_State_value = map[string]int32{
	"PendingOpen":   0,
	"Open":          1,
	"PendingClosed": 2,
	"Closed":        3,
}

func (x Channel_State) String() string {
	return proto.EnumName(Channel_State_name, int32(x))
}
func (Channel_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Channel struct {
	ChannelId string        `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	State     Channel_State `protobuf:"varint,2,opt,name=state,enum=schema.Channel_State" json:"state,omitempty"`
	// This is how
	OpeningTx                *wire.OpeningTx     `protobuf:"bytes,3,opt,name=opening_tx" json:"opening_tx,omitempty"`
	OpeningTxEnvelope        *wire.Envelope      `protobuf:"bytes,4,opt,name=opening_tx_envelope" json:"opening_tx_envelope,omitempty"`
	LastUpdateTx             *wire.UpdateTx      `protobuf:"bytes,5,opt,name=last_update_tx" json:"last_update_tx,omitempty"`
	LastUpdateTxEnvelope     *wire.Envelope      `protobuf:"bytes,6,opt,name=last_update_tx_envelope" json:"last_update_tx_envelope,omitempty"`
	LastFullUpdateTx         *wire.UpdateTx      `protobuf:"bytes,7,opt,name=last_full_update_tx" json:"last_full_update_tx,omitempty"`
	LastFullUpdateTxEnvelope *wire.Envelope      `protobuf:"bytes,8,opt,name=last_full_update_tx_envelope" json:"last_full_update_tx_envelope,omitempty"`
	EscrowProvider           *EscrowProvider     `protobuf:"bytes,9,opt,name=escrow_provider" json:"escrow_provider,omitempty"`
	Account                  *Account            `protobuf:"bytes,10,opt,name=account" json:"account,omitempty"`
	Peer                     *Peer               `protobuf:"bytes,11,opt,name=peer" json:"peer,omitempty"`
	Me                       uint32              `protobuf:"varint,12,opt,name=me" json:"me,omitempty"`
	Fulfillments             []*wire.Fulfillment `protobuf:"bytes,13,rep,name=fulfillments" json:"fulfillments,omitempty"`
}

func (m *Channel) Reset()                    { *m = Channel{} }
func (m *Channel) String() string            { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()               {}
func (*Channel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Channel) GetOpeningTx() *wire.OpeningTx {
	if m != nil {
		return m.OpeningTx
	}
	return nil
}

func (m *Channel) GetOpeningTxEnvelope() *wire.Envelope {
	if m != nil {
		return m.OpeningTxEnvelope
	}
	return nil
}

func (m *Channel) GetLastUpdateTx() *wire.UpdateTx {
	if m != nil {
		return m.LastUpdateTx
	}
	return nil
}

func (m *Channel) GetLastUpdateTxEnvelope() *wire.Envelope {
	if m != nil {
		return m.LastUpdateTxEnvelope
	}
	return nil
}

func (m *Channel) GetLastFullUpdateTx() *wire.UpdateTx {
	if m != nil {
		return m.LastFullUpdateTx
	}
	return nil
}

func (m *Channel) GetLastFullUpdateTxEnvelope() *wire.Envelope {
	if m != nil {
		return m.LastFullUpdateTxEnvelope
	}
	return nil
}

func (m *Channel) GetEscrowProvider() *EscrowProvider {
	if m != nil {
		return m.EscrowProvider
	}
	return nil
}

func (m *Channel) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Channel) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Channel) GetFulfillments() []*wire.Fulfillment {
	if m != nil {
		return m.Fulfillments
	}
	return nil
}

type Account struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pubkey         []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Privkey        []byte `protobuf:"bytes,3,opt,name=privkey,proto3" json:"privkey,omitempty"`
	EscrowProvider string `protobuf:"bytes,4,opt,name=escrow_provider" json:"escrow_provider,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EscrowProvider struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pubkey  []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *EscrowProvider) Reset()                    { *m = EscrowProvider{} }
func (m *EscrowProvider) String() string            { return proto.CompactTextString(m) }
func (*EscrowProvider) ProtoMessage()               {}
func (*EscrowProvider) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Peer struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pubkey  []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *Peer) Reset()                    { *m = Peer{} }
func (m *Peer) String() string            { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()               {}
func (*Peer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Channel)(nil), "schema.Channel")
	proto.RegisterType((*Account)(nil), "schema.Account")
	proto.RegisterType((*EscrowProvider)(nil), "schema.EscrowProvider")
	proto.RegisterType((*Peer)(nil), "schema.Peer")
	proto.RegisterEnum("schema.Channel_State", Channel_State_name, Channel_State_value)
}

var fileDescriptor0 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x6d, 0x8b, 0xd3, 0x40,
	0x10, 0xb6, 0x6d, 0xda, 0x5e, 0xa7, 0x69, 0xda, 0xce, 0xe9, 0xb9, 0x88, 0x42, 0xc9, 0x17, 0x15,
	0xb9, 0x14, 0x4e, 0x05, 0xbf, 0xa8, 0x1c, 0x47, 0x0f, 0x04, 0xd1, 0xb2, 0xbe, 0x7c, 0x0d, 0x69,
	0xb2, 0x77, 0x8d, 0xb7, 0x79, 0x21, 0xd9, 0xf4, 0xea, 0x4f, 0xf6, 0x5f, 0xb8, 0xd9, 0x6c, 0xfa,
	0x72, 0x16, 0x44, 0xf0, 0x4b, 0x3b, 0x33, 0xcf, 0x3c, 0xf3, 0x3c, 0xbb, 0x3b, 0x04, 0xde, 0x5c,
	0x87, 0x62, 0x59, 0x2c, 0x1c, 0x3f, 0x89, 0xa6, 0x3f, 0x44, 0xc6, 0xa2, 0x85, 0xe7, 0xdf, 0x4c,
	0x8b, 0xd4, 0x3f, 0xf5, 0x93, 0x8c, 0x4d, 0x6f, 0x3d, 0xce, 0x99, 0x98, 0xe6, 0xfe, 0x92, 0x45,
	0x9e, 0xfe, 0x73, 0xd2, 0x2c, 0x11, 0x09, 0x76, 0xaa, 0xec, 0xd1, 0xe9, 0x5f, 0x26, 0x84, 0xfa,
	0xa7, 0xa2, 0xd9, 0xbf, 0xda, 0xd0, 0xbd, 0x58, 0x7a, 0x71, 0xcc, 0x38, 0x3e, 0x01, 0xf0, 0xab,
	0xd0, 0x0d, 0x03, 0xd2, 0x98, 0x34, 0x9e, 0xf5, 0x68, 0x4f, 0x57, 0x3e, 0x04, 0xf8, 0x02, 0xda,
	0xb9, 0xf0, 0x04, 0x23, 0x4d, 0x89, 0x58, 0x67, 0x0f, 0x1c, 0xad, 0xaf, 0xe9, 0xce, 0x97, 0x12,
	0xa4, 0x55, 0x0f, 0x3a, 0x00, 0x49, 0xca, 0xe2, 0x30, 0xbe, 0x76, 0xc5, 0x9a, 0xb4, 0x24, 0xa3,
	0x7f, 0x36, 0x74, 0x94, 0xf0, 0xe7, 0xaa, 0xfe, 0x75, 0x4d, 0x7b, 0x49, 0x1d, 0xe2, 0x3b, 0x38,
	0xde, 0xf6, 0xbb, 0x2c, 0x5e, 0x31, 0x2e, 0x73, 0x62, 0x28, 0xa2, 0x55, 0x11, 0x67, 0xba, 0x4a,
	0xc7, 0x1b, 0x5e, 0x5d, 0xc2, 0x57, 0x60, 0x71, 0x2f, 0x17, 0x6e, 0x91, 0x06, 0x52, 0xbe, 0xd4,
	0x6c, 0xef, 0x52, 0xbf, 0xa9, 0xb2, 0x94, 0x34, 0xcb, 0xae, 0x3a, 0xc3, 0x19, 0x3c, 0xdc, 0x67,
	0x6d, 0x95, 0x3b, 0x07, 0x95, 0xef, 0xef, 0xd2, 0x37, 0xe2, 0x6f, 0xe1, 0x58, 0x8d, 0xb9, 0x2a,
	0x38, 0xdf, 0x71, 0xd0, 0x3d, 0xe8, 0x60, 0x54, 0xb6, 0x5e, 0xca, 0xce, 0x8d, 0x8b, 0x4f, 0xf0,
	0xf8, 0x00, 0x7d, 0x6b, 0xe5, 0xe8, 0xa0, 0x15, 0x72, 0x77, 0xce, 0xc6, 0xce, 0x7b, 0x18, 0xb2,
	0xdc, 0xcf, 0x92, 0x5b, 0x57, 0xbe, 0xf1, 0x2a, 0x0c, 0x58, 0x46, 0x7a, 0x6a, 0xc4, 0x49, 0xfd,
	0x64, 0x33, 0x05, 0xcf, 0x35, 0x4a, 0x2d, 0xb6, 0x97, 0xe3, 0x73, 0xe8, 0x7a, 0xbe, 0x9f, 0x14,
	0xb1, 0x20, 0xa0, 0x5f, 0x4e, 0x13, 0xcf, 0xab, 0x32, 0xad, 0x71, 0x9c, 0x80, 0x91, 0x32, 0x29,
	0xd0, 0x57, 0x7d, 0x66, 0xdd, 0x37, 0x97, 0x35, 0xaa, 0x10, 0xb4, 0xa0, 0x19, 0x31, 0x62, 0x4a,
	0x7c, 0x40, 0x65, 0x84, 0xaf, 0xc1, 0x94, 0x07, 0xbd, 0x0a, 0x39, 0x8f, 0x58, 0x2c, 0x72, 0x32,
	0x98, 0xb4, 0x24, 0x73, 0x5c, 0x9d, 0xee, 0x72, 0x8b, 0xd0, 0xbd, 0x36, 0xfb, 0x1c, 0xda, 0x6a,
	0xc1, 0x70, 0x08, 0xfd, 0x39, 0x8b, 0x03, 0xf9, 0xfc, 0xe5, 0x22, 0x8d, 0xee, 0xe1, 0x11, 0x18,
	0x2a, 0x6a, 0xe0, 0x18, 0x06, 0x1a, 0xba, 0xe0, 0x49, 0xce, 0x82, 0x51, 0x13, 0x01, 0x3a, 0x3a,
	0x6e, 0xd9, 0x6b, 0xe8, 0x6a, 0xff, 0x88, 0x60, 0xc4, 0x9e, 0xb4, 0x55, 0x2d, 0xb9, 0x8a, 0xf1,
	0x04, 0x3a, 0x69, 0xb1, 0xb8, 0x61, 0x3f, 0xd5, 0x82, 0x9b, 0x54, 0x67, 0x48, 0xa0, 0x9b, 0x66,
	0xe1, 0xaa, 0x04, 0x5a, 0x0a, 0xa8, 0x53, 0x7c, 0xfa, 0xe7, 0x45, 0x1b, 0x6a, 0xe0, 0x9d, 0x0b,
	0xb5, 0xbf, 0x83, 0xb5, 0x7f, 0xe5, 0xff, 0x6a, 0xc0, 0x0b, 0x82, 0x8c, 0xe5, 0xb9, 0x32, 0xd0,
	0xa3, 0x75, 0x6a, 0x7f, 0x04, 0xa3, 0xbc, 0xe9, 0xff, 0x33, 0x6d, 0xd1, 0x51, 0x9f, 0x84, 0x97,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x75, 0x01, 0x3f, 0x85, 0x04, 0x00, 0x00,
}
