// Code generated by protoc-gen-go.
// source: wire/wire.proto
// DO NOT EDIT!

/*
Package wire is a generated protocol buffer package.

It is generated from these files:
	wire/wire.proto

It has these top-level messages:
	OpeningTx
	UpdateTx
	FollowOnTx
	Cancellation
	Envelope
*/
package wire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type OpeningTx struct {
	ChannelId  string   `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	Pubkeys    [][]byte `protobuf:"bytes,2,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	State      []byte   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	HoldPeriod uint32   `protobuf:"varint,4,opt,name=hold_period" json:"hold_period,omitempty"`
}

func (m *OpeningTx) Reset()                    { *m = OpeningTx{} }
func (m *OpeningTx) String() string            { return proto.CompactTextString(m) }
func (*OpeningTx) ProtoMessage()               {}
func (*OpeningTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateTx struct {
	ChannelId      string `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,2,opt,name=sequence_number" json:"sequence_number,omitempty"`
	Fast           bool   `protobuf:"varint,3,opt,name=fast" json:"fast,omitempty"`
	State          []byte `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *UpdateTx) Reset()                    { *m = UpdateTx{} }
func (m *UpdateTx) String() string            { return proto.CompactTextString(m) }
func (*UpdateTx) ProtoMessage()               {}
func (*UpdateTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type FollowOnTx struct {
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	State     []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *FollowOnTx) Reset()                    { *m = FollowOnTx{} }
func (m *FollowOnTx) String() string            { return proto.CompactTextString(m) }
func (*FollowOnTx) ProtoMessage()               {}
func (*FollowOnTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Cancellation struct {
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
}

func (m *Cancellation) Reset()                    { *m = Cancellation{} }
func (m *Cancellation) String() string            { return proto.CompactTextString(m) }
func (*Cancellation) ProtoMessage()               {}
func (*Cancellation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Envelope struct {
	Payload    []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signatures [][]byte `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (m *Envelope) Reset()                    { *m = Envelope{} }
func (m *Envelope) String() string            { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()               {}
func (*Envelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*OpeningTx)(nil), "wire.OpeningTx")
	proto.RegisterType((*UpdateTx)(nil), "wire.UpdateTx")
	proto.RegisterType((*FollowOnTx)(nil), "wire.FollowOnTx")
	proto.RegisterType((*Cancellation)(nil), "wire.Cancellation")
	proto.RegisterType((*Envelope)(nil), "wire.Envelope")
}

var fileDescriptor0 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0xd5, 0x36, 0xef, 0x4b, 0x72, 0x04, 0x2a, 0x59, 0x0c, 0x59, 0x80, 0x2a, 0x0b, 0x5d,
	0x80, 0x81, 0x4f, 0x80, 0xf8, 0x23, 0xb1, 0x50, 0x14, 0xc1, 0x1c, 0x39, 0xcd, 0xd1, 0x5a, 0x98,
	0xb3, 0x49, 0x1c, 0x4a, 0x05, 0x1f, 0x1e, 0xdb, 0x21, 0x90, 0x2d, 0x8b, 0x75, 0xf7, 0xf3, 0xf9,
	0xb9, 0x47, 0x8f, 0x61, 0xba, 0x11, 0x15, 0x9e, 0xbb, 0xe3, 0x4c, 0x57, 0xca, 0x28, 0x16, 0xb8,
	0x3a, 0xfd, 0x84, 0x68, 0xa1, 0x91, 0x04, 0xad, 0x1e, 0x3f, 0xd8, 0x21, 0xc0, 0x72, 0xcd, 0x89,
	0x50, 0xe6, 0xa2, 0x4c, 0x46, 0xb3, 0xd1, 0x3c, 0xca, 0xa2, 0x1f, 0x72, 0x57, 0xb2, 0x04, 0x76,
	0x74, 0x53, 0xbc, 0xe0, 0xb6, 0x4e, 0xc6, 0xb3, 0xc9, 0x3c, 0xce, 0xba, 0x96, 0x1d, 0xc0, 0xbf,
	0xda, 0x70, 0x83, 0xc9, 0xc4, 0xbe, 0x89, 0xb3, 0xb6, 0x61, 0xc7, 0xb0, 0xbb, 0x56, 0xb2, 0xcc,
	0x35, 0x56, 0x42, 0x95, 0x49, 0x60, 0xef, 0xf6, 0x32, 0x70, 0xe8, 0xc1, 0x93, 0xf4, 0x0b, 0xc2,
	0x27, 0x5d, 0xda, 0xd1, 0xe1, 0xdd, 0x27, 0x30, 0xad, 0xf1, 0xad, 0x41, 0x5a, 0x62, 0x4e, 0xcd,
	0x6b, 0x81, 0x95, 0xf5, 0xe0, 0xf4, 0xf6, 0x3b, 0x7c, 0xef, 0x29, 0x63, 0x10, 0x3c, 0xf3, 0xda,
	0x78, 0x27, 0x61, 0xe6, 0xeb, 0x3f, 0x7b, 0x41, 0xcf, 0x5e, 0x7a, 0x09, 0x70, 0xab, 0xa4, 0x54,
	0x9b, 0x05, 0x0d, 0xef, 0xff, 0x95, 0x18, 0xf7, 0x25, 0x4e, 0x21, 0xbe, 0xe2, 0x76, 0xb7, 0x94,
	0xdc, 0x08, 0x45, 0x03, 0x22, 0xe9, 0x35, 0x84, 0x37, 0xf4, 0x8e, 0x52, 0x69, 0xf4, 0x61, 0xf2,
	0xad, 0x54, 0xbc, 0x9d, 0x73, 0x61, 0xb6, 0x2d, 0x3b, 0x02, 0xa8, 0xc5, 0x8a, 0xb8, 0x69, 0x2a,
	0xec, 0x92, 0xee, 0x91, 0xe2, 0xbf, 0xff, 0xbf, 0x8b, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3,
	0x4d, 0xc5, 0x62, 0xd2, 0x01, 0x00, 0x00,
}
