// Code generated by protoc-gen-go.
// source: wire/wire.proto
// DO NOT EDIT!

/*
Package wire is a generated protocol buffer package.

It is generated from these files:
	wire/wire.proto

It has these top-level messages:
	OpeningTx
	UpdateTx
	Fulfillment
	Cancellation
	Envelope
*/
package wire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Type int32

const (
	Type_type_opening_tx   Type = 0
	Type_type_update_tx    Type = 1
	Type_type_fulfillment  Type = 2
	Type_type_cancellation Type = 3
)

var Type_name = map[int32]string{
	0: "type_opening_tx",
	1: "type_update_tx",
	2: "type_fulfillment",
	3: "type_cancellation",
}
var Type_value = map[string]int32{
	"type_opening_tx":   0,
	"type_update_tx":    1,
	"type_fulfillment":  2,
	"type_cancellation": 3,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OpeningTx struct {
	Type       Type     `protobuf:"varint,1,opt,name=type,enum=wire.Type" json:"type,omitempty"`
	ChannelId  string   `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	Pubkeys    [][]byte `protobuf:"bytes,3,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
	State      []byte   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	HoldPeriod uint32   `protobuf:"varint,5,opt,name=hold_period" json:"hold_period,omitempty"`
}

func (m *OpeningTx) Reset()                    { *m = OpeningTx{} }
func (m *OpeningTx) String() string            { return proto.CompactTextString(m) }
func (*OpeningTx) ProtoMessage()               {}
func (*OpeningTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateTx struct {
	Type           Type   `protobuf:"varint,1,opt,name=type,enum=wire.Type" json:"type,omitempty"`
	ChannelId      string `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	SequenceNumber uint32 `protobuf:"varint,3,opt,name=sequence_number" json:"sequence_number,omitempty"`
	Fast           bool   `protobuf:"varint,4,opt,name=fast" json:"fast,omitempty"`
	State          []byte `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *UpdateTx) Reset()                    { *m = UpdateTx{} }
func (m *UpdateTx) String() string            { return proto.CompactTextString(m) }
func (*UpdateTx) ProtoMessage()               {}
func (*UpdateTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Fulfillment struct {
	Type      Type   `protobuf:"varint,1,opt,name=type,enum=wire.Type" json:"type,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	State     []byte `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *Fulfillment) Reset()                    { *m = Fulfillment{} }
func (m *Fulfillment) String() string            { return proto.CompactTextString(m) }
func (*Fulfillment) ProtoMessage()               {}
func (*Fulfillment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Cancellation struct {
	Type      Type   `protobuf:"varint,1,opt,name=type,enum=wire.Type" json:"type,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
}

func (m *Cancellation) Reset()                    { *m = Cancellation{} }
func (m *Cancellation) String() string            { return proto.CompactTextString(m) }
func (*Cancellation) ProtoMessage()               {}
func (*Cancellation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Envelope struct {
	Type       Type     `protobuf:"varint,1,opt,name=type,enum=wire.Type" json:"type,omitempty"`
	Payload    []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signatures [][]byte `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (m *Envelope) Reset()                    { *m = Envelope{} }
func (m *Envelope) String() string            { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()               {}
func (*Envelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*OpeningTx)(nil), "wire.OpeningTx")
	proto.RegisterType((*UpdateTx)(nil), "wire.UpdateTx")
	proto.RegisterType((*Fulfillment)(nil), "wire.Fulfillment")
	proto.RegisterType((*Cancellation)(nil), "wire.Cancellation")
	proto.RegisterType((*Envelope)(nil), "wire.Envelope")
	proto.RegisterEnum("wire.Type", Type_name, Type_value)
}

var fileDescriptor0 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x2d, 0x2d, 0x0a, 0x03, 0x42, 0x5d, 0x35, 0xe9, 0x45, 0x25, 0xbd, 0x48, 0x3c, 0x60,
	0xa2, 0x8f, 0x60, 0x34, 0xf1, 0xe0, 0x9f, 0x34, 0x78, 0x33, 0x69, 0xb6, 0x74, 0x80, 0x8d, 0xcb,
	0x6e, 0x6d, 0xb7, 0x0a, 0xcf, 0xa2, 0x0f, 0xeb, 0xee, 0x56, 0xa4, 0x37, 0x0f, 0x5c, 0x9a, 0x9d,
	0x5f, 0x67, 0x67, 0xbe, 0x9d, 0x6f, 0xa0, 0xff, 0xc9, 0x72, 0xbc, 0x34, 0x9f, 0x51, 0x96, 0x4b,
	0x25, 0x89, 0x67, 0xce, 0xe1, 0x97, 0x03, 0xed, 0xa7, 0x0c, 0x05, 0x13, 0xb3, 0xf1, 0x92, 0x9c,
	0x82, 0xa7, 0x56, 0x19, 0x06, 0xce, 0xc0, 0x19, 0xf6, 0xae, 0x60, 0x64, 0xd3, 0xc7, 0x9a, 0x44,
	0x96, 0x93, 0x13, 0x80, 0xc9, 0x9c, 0x0a, 0x81, 0x3c, 0x66, 0x69, 0xd0, 0xd0, 0x59, 0xed, 0xa8,
	0xfd, 0x4b, 0xee, 0x53, 0x12, 0xc0, 0x5e, 0x56, 0x26, 0x6f, 0xb8, 0x2a, 0x02, 0x77, 0xe0, 0x0e,
	0xbb, 0xd1, 0x3a, 0x24, 0x47, 0xd0, 0x2c, 0x14, 0x55, 0x18, 0x78, 0xfa, 0x4e, 0x37, 0xaa, 0x02,
	0x72, 0x06, 0x9d, 0xb9, 0xe4, 0x69, 0x9c, 0x61, 0xce, 0x64, 0x1a, 0x34, 0xf5, 0xbf, 0xfd, 0x08,
	0x0c, 0x7a, 0xb6, 0x24, 0xfc, 0x76, 0xa0, 0xf5, 0x92, 0xa5, 0x3a, 0x77, 0x7b, 0x71, 0xe7, 0xd0,
	0x2f, 0xf0, 0xbd, 0x44, 0x31, 0xc1, 0x58, 0x94, 0x8b, 0x04, 0x73, 0x2d, 0xd2, 0x34, 0xec, 0xad,
	0xf1, 0xa3, 0xa5, 0x84, 0x80, 0x37, 0xa5, 0x85, 0xb2, 0x52, 0x5b, 0x91, 0x3d, 0x6f, 0xf4, 0x37,
	0x6b, 0xfa, 0xc3, 0x04, 0x3a, 0x77, 0x25, 0x9f, 0x32, 0xce, 0x17, 0x28, 0xd4, 0xb6, 0x02, 0xff,
	0x7a, 0xb8, 0xf5, 0x1e, 0x0f, 0xd0, 0xbd, 0xa1, 0x5a, 0x1c, 0xe7, 0x54, 0x31, 0x29, 0xb6, 0x6c,
	0x12, 0xa6, 0xd0, 0xba, 0x15, 0x1f, 0xc8, 0xa5, 0x4e, 0xfd, 0xaf, 0x94, 0xb1, 0x93, 0xae, 0xb8,
	0xa4, 0x55, 0x1d, 0x63, 0x67, 0x15, 0xea, 0x9b, 0x50, 0xb0, 0x99, 0xa0, 0xaa, 0xcc, 0x71, 0xed,
	0x75, 0x8d, 0x5c, 0xbc, 0x82, 0x67, 0xea, 0x90, 0x43, 0xe8, 0x9b, 0x4a, 0xb1, 0xac, 0x36, 0x2c,
	0x56, 0x4b, 0x7f, 0x47, 0xcf, 0xb7, 0x67, 0x61, 0x69, 0x8d, 0x35, 0xcc, 0xd1, 0x6f, 0xf7, 0x2d,
	0x9b, 0x6e, 0xc6, 0xe9, 0x37, 0xc8, 0x31, 0x1c, 0x58, 0x3a, 0xa9, 0x0d, 0xc0, 0x77, 0x93, 0x5d,
	0xbb, 0xc0, 0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0xb2, 0x30, 0x1a, 0xd3, 0x02, 0x00,
	0x00,
}
